{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"else",
				"elseif"
			],
			[
				"benchD",
				"benchDataBase"
			],
			[
				"sea",
				"searchExtension"
			],
			[
				"data",
				"databaseFileName"
			],
			[
				"functio",
				"functionQuery"
			],
			[
				"setupSe",
				"setupSegmentsView"
			],
			[
				"to",
				"toSequenceString"
			],
			[
				"In",
				"Integer"
			],
			[
				"MATCH",
				"matchstring"
			],
			[
				"select",
				"selectPos"
			],
			[
				"selectB",
				"selectByCount"
			],
			[
				"func",
				"funcMT"
			],
			[
				"Char",
				"Char"
			],
			[
				"Mat",
				"MatchType"
			],
			[
				"qui",
				"quickQuery"
			],
			[
				"mat",
				"matchtype"
			],
			[
				"query",
				"queryToFile"
			],
			[
				"Ma",
				"MatchType"
			],
			[
				"pos",
				"posQuery"
			],
			[
				"posi",
				"PositionQuery"
			],
			[
				"RE",
				"REFERENCES"
			],
			[
				"se",
				"segmentlist"
			],
			[
				"Sege",
				"SegmentlistHeader"
			],
			[
				"qu",
				"quotedChar"
			],
			[
				"Se",
				"SegmentlistHeader"
			],
			[
				"u",
				"unionQuery"
			],
			[
				"setupAs",
				"setupAssignedMetadata"
			],
			[
				"parse",
				"parseResult"
			],
			[
				"other",
				"otherwise"
			],
			[
				"ot",
				"otherwise"
			],
			[
				"selecLa",
				"selectLabelInLabeltype"
			],
			[
				"SegmentList",
				"SegmentlistHeader"
			],
			[
				"Sql",
				"SqlValue"
			],
			[
				"ume",
				"umeQueryComponent"
			],
			[
				"label",
				"labelType"
			],
			[
				"writeSeg",
				"writeSegmentList"
			],
			[
				"hash",
				"hashFile"
			],
			[
				"CON",
				"CONFLICT"
			],
			[
				"Le",
				"LevelHierarchy"
			],
			[
				"setupL",
				"setupLabelTypes"
			],
			[
				"setupLe",
				"setupLegalLabels"
			],
			[
				"setup",
				"setupFeatures"
			],
			[
				"setu",
				"setupVariables"
			],
			[
				"set",
				"setupSegments"
			],
			[
				"conn",
				"connectSqlite3"
			],
			[
				"setupT",
				"setupTCLevelLevel"
			],
			[
				"getOp",
				"getSqlOp"
			],
			[
				"get",
				"getOpJoiner"
			],
			[
				"so",
				"sort"
			],
			[
				"som",
				"somethingelse"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Utilities/home_states.lua",
			"settings":
			{
				"buffer_size": 5579,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Utilities/utils.lua",
			"settings":
			{
				"buffer_size": 7013,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Utilities/devices.lua",
			"settings":
			{
				"buffer_size": 1251,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Utilities/timers.lua",
			"settings":
			{
				"buffer_size": 31813,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Utilities/time.lua",
			"settings":
			{
				"buffer_size": 5716,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\n--- These functions handle presence of people in the house and similar things. \n-- Presence detection also, and exactly who is present.\n-- @section people\n\n\nfunction some()\n\tlocal stat = tostring(fibaro:getGlobalValue(\"TimeOfDay\"));\n\treturn(sting.lower(stat) == \"day\");\nend;",
			"file": "Utilities/occupants.lua",
			"file_size": 124,
			"file_write_time": 131561902604580111,
			"settings":
			{
				"buffer_size": 276,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Haskell/Haskell.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "comm",
		"selected_items":
		[
			[
				"comm",
				"Git: Quick Commit (current file)"
			],
			[
				"rever",
				"Git: Show Previous Version of Current File"
			],
			[
				"commit",
				"Git: Commit history"
			],
			[
				"amm",
				"Git: Amend Commit"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"gi",
				"Git: Commit"
			],
			[
				"json",
				"Pretty JSON: Format (Pretty Print) JSON"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"rev",
				"TodoReview: Open Files"
			],
			[
				"todo",
				"SimpleTODO: Add TODO"
			],
			[
				"GT",
				"Git: Push Current Branch"
			],
			[
				"com",
				"Git: Quick Commit (current file)"
			],
			[
				"quic",
				"Git: Quick Commit"
			],
			[
				"add",
				"Git: Add Current File"
			],
			[
				"qui",
				"Git: Quick Commit"
			],
			[
				"commi",
				"Git: Commit"
			],
			[
				"qu",
				"Git: Quick Commit"
			],
			[
				"amen",
				"Git: Amend Commit"
			],
			[
				"folde",
				"Project: Add Folder"
			],
			[
				"quick",
				"Git: Quick Commit"
			],
			[
				"quc",
				"Git: Quick Commit"
			],
			[
				"lua",
				"Set Syntax: Lua"
			],
			[
				"git",
				"Git: Quick Commit"
			],
			[
				"haskell",
				"SublimeHaskell: Go to next error"
			],
			[
				"haskell lin",
				"SublimeHaskell: Check & Lint"
			],
			[
				"hask",
				"SublimeHaskell: Stylish"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"upd",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"git p",
				"Git: Push"
			],
			[
				"git ",
				"Git: Commit"
			],
			[
				"ctags",
				"CTags: Rebuild Tags"
			],
			[
				"to",
				"Show TODOs: Open files only"
			],
			[
				"text",
				"TextFormatting - Maxlength (wrap lines)"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"brack ",
				"BracketHighlighter: Toggle Global Enable"
			],
			[
				"toggle",
				"BracketHighlighter: Toggle High Visibility Mode"
			],
			[
				"bra",
				"BracketHighlighter: Toggle High Visibility Mode"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"hasl",
				"SublimeHaskell: Check & Lint"
			],
			[
				"haskell l",
				"SublimeHaskell: Lint"
			],
			[
				"Package Control: ",
				"Package Control: Discover Packages"
			],
			[
				"hde",
				"Show TODOs: Project and open files"
			],
			[
				"pref hask",
				"Preferences: SublimeHaskell Settings – User"
			],
			[
				"pref has",
				"Preferences: SublimeHaskell Settings – Default"
			],
			[
				"refor",
				"StylishHaskell: Reformat haskell"
			],
			[
				"sty",
				"StylishHaskell: Reformat haskell"
			],
			[
				"hlin",
				"SublimeHaskell: Check & Lint"
			],
			[
				"pacak",
				"Package Control: Discover Packages"
			],
			[
				"prese",
				"Preferences: Browse Packages"
			],
			[
				"repl",
				"SublimeREPL: Haskell"
			],
			[
				"paca",
				"Package Control: Discover Packages"
			],
			[
				"package install ",
				"Package Control: Install Package"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"pacakge",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"package",
				"Package Control: Discover Packages"
			],
			[
				"packa insta",
				"Package Control: Install Package"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"lint",
				"SublimeHaskell: Lint"
			],
			[
				"haske",
				"Set Syntax: Haskell"
			],
			[
				"has",
				"Preferences: SublimeHaskell Settings – User"
			],
			[
				"",
				"Package Control: List Packages"
			],
			[
				"Pac",
				"Package Control: Install Package"
			]
		],
		"width": 420.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/frkkan96/Documents/src/home_center_2_addons",
		"/Users/frkkan96/Documents/src/home_center_2_addons/lib",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities"
	],
	"file_history":
	[
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/0_project.lua",
		"/Users/frkkan96/Desktop/Mitt jättebra projekt/SpeechRecPrompts_2.dtd",
		"/Users/frkkan96/Desktop/Mitt jättebra projekt/RECS/0001/M10001demo_002_annot.json",
		"/Users/frkkan96/CloudStation/CloudStation/Domotics/HC2 snmp.webarchive",
		"/Users/frkkan96/Desktop/testar",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/test_housekeeping.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/lib/config.ld",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/time.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/Makefile",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/timers.lua",
		"/Users/frkkan96/Documents/forskning/Parkinson/ddkrythm/PD_NC_classification.md",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/weatherinfo.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/utils.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/lighting.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/humidity_temperature.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/lib/fk_lib.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/sourcetriggers.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/event_management.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/users.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/config.ld",
		"/Users/frkkan96/Documents/src/home_center_2_addons/lib/bhall.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/lib/B-HAll.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/carheater.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Misc/weatherinfo.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/project.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/lighting_utils.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/datetime.lua",
		"/Volumes/docker/homebridge/config.json",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/window_external_lights_timer.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/car_heater_off.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/car_heater.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/wakeup_light.lua",
		"/Users/frkkan96/CloudStation/CloudStation/Domotics/OH1backup20160815/openhab/configurations/items/ikketeru.items",
		"/Users/frkkan96/Documents/forskning/Essentiell_tremor/voice tremor acoustics/Fredrik_VT_ALVIN/FK.res",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/AV_inside_lights.lua",
		"/Users/frkkan96/Desktop/aaa.TextGrid",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/all_off.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/window_lights_off.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/window_lights_on.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/Motion_light_scenes/Smart-Lights-V1.6.7-Online.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/temperatur_nu.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/vardagsrummet_nere_motion_lights.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/closet_timer.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/fk_lib.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/test.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/ac.lua",
		"/Users/frkkan96/Documents/admin/Institutionen för klinisk vetenskap/Forskningsansvar/Bibliometri12-14/Citation report/scopus2012-2014.csv",
		"/Users/frkkan96/Documents/admin/Institutionen för klinisk vetenskap/Forskningsansvar/Bibliometri12-14/Citation report/scopus2012-2016.csv",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Utilities/triggers.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/config.ld",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/utils.lua",
		"/Users/frkkan96/Documents/src/home_center_2_addons/Scenes/sunset_sunrise.lua",
		"/Users/frkkan96/Desktop/Application 2016-03-17.pdf",
		"/Users/frkkan96/Downloads/scopus-2.csv",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/UmeQuery.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/UmeDatabase.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/SegmentList.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/tests/TestQueryGenerator.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/FileParsers/TextgridParser.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/tests/TestQueryParser.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/sql/requery.sql",
		"/Users/frkkan96/Library/Application Support/Sublime Text 2/Packages/User/SublimeHaskell.sublime-settings",
		"/Users/frkkan96/Documents/src/umecore-hs/String",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/UmeQueryParser.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/LICENSE",
		"/Users/frkkan96/Documents/src/umecore-hs/src/textgrid_import.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/umequery.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/IPA/IPAParser.hs",
		"/Users/frkkan96/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/frkkan96/Desktop/articulation_proficiency 2/articulation.luax",
		"/Volumes/OpenHAB Config/quartz.properties",
		"/Users/frkkan96/Documents/src/umecore-hs/umecore-hs.cabal",
		"/Users/frkkan96/Documents/src/umecore-hs/GT_English.pdf",
		"/Users/frkkan96/Desktop/test.org",
		"/Users/frkkan96/Downloads/scholar.ris",
		"/Users/frkkan96/Downloads/beat/loadmrf.m",
		"/Users/frkkan96/Downloads/snack2.2.10/generic/jkGetF0.h",
		"/Users/frkkan96/Downloads/snack2.2.10/generic/jkGetF0.c",
		"/Users/frkkan96/Documents/src/umecore-hs/bench/mkBenchdata.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/tpgui.hs",
		"/Users/frkkan96/Desktop/JONT-D-15-00113",
		"/Volumes/C/Program Files (x86)/Alvin3/phonetics/consonants/consonantsymbols1.luax",
		"/Users/frkkan96/Desktop/Reviewer",
		"/Users/frkkan96/Downloads/export.csv",
		"/Users/frkkan96/Documents/src/umecore-hs/src/query2file.hs",
		"/Users/frkkan96/Desktop/example.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/tests/tests.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/seq.sql",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/DataTypes.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/tests/TestUmeQuery.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/textgrid_import",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/testquery.sql",
		"/Users/frkkan96/Documents/src/umecore-hs/dist/setup-config",
		"/Users/frkkan96/Documents/forskning/Parkinson/ddkrythm/patload.csv",
		"/Users/frkkan96/Desktop/OmniFocus.csv",
		"/Users/frkkan96/Desktop/submitting",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/QueryGenerator.hs",
		"/Users/frkkan96/Documents/src/legacy_info/ume/umecore/generic/emuquery.tcl",
		"/Users/frkkan96/Desktop/OmniFocus.txt",
		"/Users/frkkan96/Documents/src/umecore-hs/textgrid_import.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/sql/requery.sql",
		"/Users/frkkan96/Documents/src/umecore-hs/TextgridParser.hs",
		"/Users/frkkan96/Library/Application Support/Sublime Text 2/Packages/SublimeHaskell/Settings/SublimeHaskell.sublime-settings",
		"/Users/frkkan96/Documents/src/legacy_info/sql/requery.sql",
		"/Users/frkkan96/Library/Application Support/Sublime Text 2/Packages/2pdf/2pdf.sublime-settings",
		"/Users/frkkan96/Library/Application Support/Sublime Text 2/Packages/User/2pdf.sublime-settings",
		"/Users/frkkan96/Library/Application Support/Sublime Text 2/Packages/User/Git.sublime-settings",
		"/Users/frkkan96/Documents/src/umecore-hs/umecore-hs.sublime-project",
		"/Users/frkkan96/Documents/src/umecore-hs/dist/package.conf.inplace",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/Database/test.hs",
		"/Users/frkkan96/Library/Application Support/Sublime Text 2/Packages/User/Package Control.sublime-settings",
		"/Users/frkkan96/Library/Application Support/Sublime Text 2/Packages/User/Default (OSX).sublime-keymap",
		"/Users/frkkan96/Documents/src/umecore-hs/Setup.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/Setup.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/src/Phonetic/Database/QueryGenerator.hs",
		"/Users/frkkan96/Documents/src/umecore-hs/src/Phonetic/FileParsers/textgrid_import.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/src/Phonetic/Database/UmeQueryParser.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/src/Phonetic/FileParsers/TextgridParser.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/src/Phonetic/FileParsers/textgrid_import.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/src/Phonetic/Database/UmeQuery.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/src/Phonetic/Database/UmeDatabase.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/src/Phonetic/Database/SegmentList.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/src/Phonetic/Database/DataTypes.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/legacy_info/ume/umecore/generic/emuquery.tcl",
		"/Users/frkkan96/Documents/src/umecore_hs/UmeQueryParser.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/QueryGenerator.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/UmeDatabase.hs",
		"/Users/frkkan96/Documents/src/umecore_hs/textgrid_import.hs"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"fibaro:call(",
			"=.*,[\\n$]",
			"@example",
			"notCurr",
			"notCurrentlyRunning",
			"datatime.",
			"Function ",
			"function ",
			"136",
			"--.*",
			"\",",
			"--.*",
			"    [",
			".*--",
			"^\n2SP\n3SP\n4SP\n1DP\n2DP\n3DP\n4DP\n1HP\n2HP\n3HP\n4HP\n1HR\n2HR\n3HR\n4HR",
			"1SP\n2SP\n3SP\n4SP\n1DP\n2DP\n3DP\n4DP\n1HP\n2HP\n3HP\n4HP\n1HR\n2HR\n3HR\n4HR",
			".*=\"",
			"--.*",
			"\",",
			"\"ss",
			"    [",
			"string: ",
			" Button",
			"Press",
			"]",
			"[",
			"    [^-]+-",
			"     ",
			"    ",
			"\",\\n",
			"B",
			"Press",
			"Double",
			"Single",
			"true",
			"@{os.date}",
			"os.date",
			"s.date",
			"os.date",
			"sunsetD",
			"\\\"",
			"setupUmeDatabase",
			": ",
			"UmeQuery",
			"simpleQueryIntersect",
			"\t",
			"tRunUmeQuery",
			"otherwise",
			"BS",
			"BTE",
			"labels ",
			"labels",
			"label",
			"otherwise",
			"AugmentedSegment",
			"toArgs",
			"\\t",
			"    commit conn",
			"disconnect",
			"connectSqlite3",
			"handleSqlError $ ",
			"[]",
			"quickQuery'",
			"\tcommit conn",
			"disconnect",
			"quickQuery'",
			"quickQuery",
			"quickQuery'",
			"SQLite",
			"\\t",
			"        ",
			"^\\t",
			"\n\t",
			" `mappend` ",
			") ",
			" `mappend` ",
			"Text",
			"text",
			"Text",
			" Text ",
			"Text",
			"text",
			"Text",
			"toArgs",
			"T.",
			"\t",
			"SQLT",
			"try (umeSubquery) <|>  try(functionQuery) <|> try (labelInLabelType ) <|> labelType",
			"disjunctQuery",
			"\t",
			"sequenceQueryHash",
			"query",
			"write",
			"print",
			"appendFile file",
			"write",
			"Write",
			"write",
			"'",
			"combine fp $ combine",
			"disjunctQuery",
			"try (disjunctQuery) <|>",
			"TODO:",
			"testdb",
			"queryPrint",
			"?",
			"[|]+",
			"[ \\t]+",
			"[|]",
			"[ \\t]*",
			"dur",
			"=",
			"let",
			"utterance",
			"dominatedCount",
			"s.",
			"SECONDARY",
			"Pos(",
			"PARENT",
			"CHILD",
			"utterance_id",
			"PARENT",
			"CHILD",
			"Acousti",
			"SECONDARY",
			"TARGET",
			"F.",
			"utterance_id"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"    ",
			"'",
			"\\t",
			"",
			"ä",
			"ö",
			"å"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Utilities/home_states.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5579,
						"regions":
						{
						},
						"selection":
						[
							[
								4730,
								4730
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Utilities/utils.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7013,
						"regions":
						{
						},
						"selection":
						[
							[
								412,
								2860
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 965.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Utilities/devices.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1251,
						"regions":
						{
						},
						"selection":
						[
							[
								1133,
								1133
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 87.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Utilities/timers.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31813,
						"regions":
						{
						},
						"selection":
						[
							[
								25163,
								25163
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8622.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Utilities/time.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5716,
						"regions":
						{
						},
						"selection":
						[
							[
								1352,
								1230
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Utilities/occupants.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 276,
						"regions":
						{
						},
						"selection":
						[
							[
								157,
								157
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 309.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 136.0
	},
	"output.haskell_sublime_load":
	{
		"height": 100.0
	},
	"pinned_build_system": "Packages/User/Praat/Praat.sublime-build",
	"project": "hc2.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"not",
				"notCurrentlyRunning"
			],
			[
				"fina",
				"finalizeUmeQuery"
			],
			[
				"run",
				"runUmeQuery"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 364.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
